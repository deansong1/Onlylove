{"remainingRequest":"C:\\Users\\web\\Desktop\\彼爱旅拍\\onlylove_cli\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\彼爱旅拍\\onlylove_cli\\src\\main.js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\彼爱旅拍\\onlylove_cli\\src\\main.js","mtime":1565155001340},{"path":"C:\\Users\\web\\Desktop\\彼爱旅拍\\onlylove_cli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\彼爱旅拍\\onlylove_cli\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //引入第三方组件库 mint ui\n//1:完整引入mint-ui组件库中所有组件\n\nimport MintUI from \"mint-ui\"; //2:单独引入mint-ui组件库中样式文件\n\nimport \"mint-ui/lib/style.css\"; //3:将mint-ui注册vue实例中\n\nVue.use(MintUI); //4:将字体图标引入到当前项目中\n\nimport \"./font/iconfont.css\"; //5:引入axios 第三方ajax模块\n\nimport axios from \"axios\"; //6:配置axios 基础路径\n\naxios.defaults.baseURL = \"http://127.0.0.1:3000/\"; //7:配置axios 保存session信息\n\naxios.defaults.withCredentials = true; //8:将axios 注册vue 实例中\n//由于axios不支持 use 将实例添加vue原型\n\nVue.prototype.axios = axios; //9:引入vuex第三方模块\n// import Vuex from \"vuex\"\n// //11：注册  Vuex\n// Vue.use(Vuex)\n// //10:创建 Vuex存储实例对象\n// var store=new Vuex.Store({\n//   state:{cartCount:0},    //共享数据\n//   mutations:{\n//     increment(state){\n//           state.cartCount++;\n//     },\n//     clear(state){\n//       state.cartCount=0;\n//     }     //清空购物车\n//   },      //添加修改数据函数\n//   getters:{\n//     getCartCount(state){\n//       return state.cartCount;\n//     }\n//   }, //添加获取数据函数\n//   actions:{\n//   } //添加异步操作数据函数\n// })\n//12：将实例对象添加到Vue中\n\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  } // store      \n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","MintUI","use","axios","defaults","baseURL","withCredentials","prototype","render","h","$mount"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,SAAnB,C,CACA;;AACA,OAAO,uBAAP,C,CACA;;AACAH,IAAII,GAAJ,CAAQD,MAAR,E,CACA;;AACA,OAAO,qBAAP,C,CAEA;;AACA,OAAOE,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,OAAf,GAAuB,wBAAvB,C,CACA;;AACAF,MAAMC,QAAN,CAAeE,eAAf,GAA+B,IAA/B,C,CACA;AACA;;AACAR,IAAIS,SAAJ,CAAcJ,KAAd,GAAsBA,KAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,IAAIL,GAAJ,CAAQ;AACNE,gBADM;AAENQ,UAAQ;AAAA,WAAKC,EAAEV,GAAF,CAAL;AAAA,GAFF,CAGN;;AAHM,CAAR,EAIGW,MAJH,CAIU,MAJV","sourceRoot":"C:\\Users\\web\\Desktop\\彼爱旅拍\\onlylove_cli","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\n//引入第三方组件库 mint ui\r\n//1:完整引入mint-ui组件库中所有组件\r\nimport MintUI from \"mint-ui\"\r\n//2:单独引入mint-ui组件库中样式文件\r\nimport \"mint-ui/lib/style.css\"\r\n//3:将mint-ui注册vue实例中\r\nVue.use(MintUI)\r\n//4:将字体图标引入到当前项目中\r\nimport \"./font/iconfont.css\"\r\n\r\n//5:引入axios 第三方ajax模块\r\nimport axios from \"axios\"\r\n//6:配置axios 基础路径\r\naxios.defaults.baseURL=\"http://127.0.0.1:3000/\"\r\n//7:配置axios 保存session信息\r\naxios.defaults.withCredentials=true\r\n//8:将axios 注册vue 实例中\r\n//由于axios不支持 use 将实例添加vue原型\r\nVue.prototype.axios = axios;\r\n//9:引入vuex第三方模块\r\n// import Vuex from \"vuex\"\r\n// //11：注册  Vuex\r\n// Vue.use(Vuex)\r\n// //10:创建 Vuex存储实例对象\r\n// var store=new Vuex.Store({\r\n//   state:{cartCount:0},    //共享数据\r\n//   mutations:{\r\n//     increment(state){\r\n//           state.cartCount++;\r\n//     },\r\n//     clear(state){\r\n//       state.cartCount=0;\r\n//     }     //清空购物车\r\n//   },      //添加修改数据函数\r\n//   getters:{\r\n//     getCartCount(state){\r\n//       return state.cartCount;\r\n//     }\r\n//   }, //添加获取数据函数\r\n//   actions:{\r\n\r\n//   } //添加异步操作数据函数\r\n// })\r\n\r\n//12：将实例对象添加到Vue中\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  // store      \r\n}).$mount('#app')\r\n"]}]}